/*
 * stm32f407xx_i2c_driver.c
 */
#include "stm32f407xx.h"

void I2C_PeripheralControl(I2C_RegDef_t *pI2Cx, uint8_t EnorDi)
{
	if (EnorDi == ENABLE) {
		pI2Cx->CR1 |= ( 1 << I2C_CR1_PE );
	}
	else {
		pI2Cx->CR1 &= ~( 1 << I2C_CR1_PE );
	}
}

void I2C_PeriClockControl(I2C_RegDef_t *pI2Cx, uint8_t EnorDi)
{
	if ( EnorDi == ENABLE ) {
		if ( pI2Cx == I2C1) {
			I2C1_PCLK_EN();
		}
		else if ( pI2Cx == I2C2) {
			I2C2_PCLK_EN();
		}
		else if ( pI2Cx == I2C3) {
			I2C3_PCLK_EN();
		}
	}
	else {
		if (pI2Cx == I2C1)
			I2C1_PCLK_DI();
		else if (pI2Cx == I2C2)
			I2C2_PCLK_DI();
		else if (pI2Cx == I2C3)
			I2C3_PCLK_DI();
	}
}

void I2C_Init(I2C_Handle_t *pI2CHandle);
void I2C_DeInit(I2C_RegDef_t *pI2Cx);
